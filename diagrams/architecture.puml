@startuml architecture

cloud Discord

node {
    [Discord Service] as discord_service
}

cloud Web

node {
    [HTTP Frontend] as http_frontend
    [HTTP Backend] as http_backend
}

database Redis {
    [Message Event Queue] as messages
    [Response Event Queue] as responses

    [Message Log] as message_log
    [User State] as user_state
}

node Messages {
    [Comprehend Function] as comprehend_handler
}

node Behaviors {
    [Behavior Fanout Function] as behavior_fanout
    [F-Chain Function] as f_chain
}

node Users {
    [User Function] as user_func
}

Web <--> http_frontend
http_frontend <-> http_backend

http_backend --> messages
http_backend --> user_func
responses --> http_backend


Discord <--> discord_service

discord_service --> messages
discord_service --> user_func
responses --> discord_service

messages --> comprehend_handler
comprehend_handler --> message_log
comprehend_handler --> behavior_fanout

behavior_fanout --> f_chain

f_chain -> responses

@enduml
